<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Light&#39;s Home</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://coderlight.cn/"/>
  <updated>2017-09-04T13:00:19.000Z</updated>
  <id>http://coderlight.cn/</id>
  
  <author>
    <name>Light</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>C/C++实现函数返回字符串</title>
    <link href="http://coderlight.cn/2017/09/04/C-C-%E5%AE%9E%E7%8E%B0%E5%87%BD%E6%95%B0%E8%BF%94%E5%9B%9E%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    <id>http://coderlight.cn/2017/09/04/C-C-实现函数返回字符串/</id>
    <published>2017-09-04T11:23:21.000Z</published>
    <updated>2017-09-04T13:00:19.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>如何实现一个返回值为char*的函数</p>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><h3 id="方法1：返回字符串常量"><a href="#方法1：返回字符串常量" class="headerlink" title="方法1：返回字符串常量"></a>方法1：返回字符串常量</h3><p>返回一个指向字符串常量的指针，但是这个方法非常局限，因为字符串常量存储在全局静态区，是只读内存区，无法对它进行计算和修改<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">char</span>* <span class="title">fun</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">return</span> <span class="string">"hello world"</span>;</div><div class="line">&#125;</div><div class="line"><span class="comment">// 或者如下方式</span></div><div class="line"><span class="function"><span class="keyword">char</span>* <span class="title">fun</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="comment">//  不加const_cast会有warning:warning: deprecated conversion from string constant to 'char*' [-Wwrite-strings]</span></div><div class="line">    <span class="keyword">char</span> *str = <span class="keyword">const_cast</span>&lt;<span class="keyword">char</span> *&gt;(<span class="string">"hello world"</span>);</div><div class="line">    <span class="keyword">return</span> str;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="方法2：使用全局申明的数组变量"><a href="#方法2：使用全局申明的数组变量" class="headerlink" title="方法2：使用全局申明的数组变量"></a>方法2：使用全局申明的数组变量</h3><p>使用一个全局数组变量来存储，简单易用，缺点是任何人可以在任何时候都可以修改这个数组，而且函数的下一次调用会覆盖掉当前值，此外，全局数组的大小需要 \geq 函数返回值所需要的内存大小<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">char</span> g_str[<span class="number">100</span>];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">char</span>* <span class="title">fun</span><span class="params">()</span> </span>&#123;</div><div class="line">    ...</div><div class="line">    g_str[i] = ...</div><div class="line">    ...</div><div class="line">    <span class="keyword">return</span> g_str;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="方法3：使用静态数组"><a href="#方法3：使用静态数组" class="headerlink" title="方法3：使用静态数组"></a>方法3：使用静态数组</h3><h3 id="方法4：函数内部显示分配堆内存来保存返回值"><a href="#方法4：函数内部显示分配堆内存来保存返回值" class="headerlink" title="方法4：函数内部显示分配堆内存来保存返回值"></a>方法4：函数内部显示分配堆内存来保存返回值</h3><h3 id="方法5：调用者分配内存来保存返回值【推荐】"><a href="#方法5：调用者分配内存来保存返回值【推荐】" class="headerlink" title="方法5：调用者分配内存来保存返回值【推荐】"></a>方法5：调用者分配内存来保存返回值【推荐】</h3>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;如何实现一个返回值为char*的函数&lt;/p&gt;
&lt;h2 id=&quot;解决方法&quot;&gt;&lt;a href=&quot;#解决方法&quot; class=&quot;headerlink
    
    </summary>
    
      <category term="C/C++" scheme="http://coderlight.cn/categories/C-C/"/>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://coderlight.cn/2017/09/01/hello-world/"/>
    <id>http://coderlight.cn/2017/09/01/hello-world/</id>
    <published>2017-09-01T03:21:00.000Z</published>
    <updated>2017-09-01T03:21:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
      <category term="test" scheme="http://coderlight.cn/categories/test/"/>
    
    
  </entry>
  
</feed>
